@model IEnumerable<GestaoObras.Domain.Entities.Material>

@{
    ViewData["Title"] = "Materiais";

    // Para DisplayNameFor com segurança quando Model pode vir vazio
    var firstItem = Model.FirstOrDefault() ?? new GestaoObras.Domain.Entities.Material();
}

<div class="card card-outline card-primary">
  <div class="card-header d-flex align-items-center gap-2">
    <h3 class="card-title mb-0">Lista de Materiais</h3>
    <div class="ms-auto">
      <a asp-action="Create" class="btn btn-success btn-sm">
        <i class="fa-solid fa-plus"></i> Novo Material
      </a>
    </div>
  </div>

  <div class="card-body">
    @if (!Model.Any())
    {
      <div class="alert alert-info mb-0">Sem resultados.</div>
    }
    else
    {
      <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
          <thead class="table-light">
            <tr>
              <th>@Html.DisplayNameFor(m => firstItem.Nome)</th>
              <th>@Html.DisplayNameFor(m => firstItem.Descricao)</th>
              <th>@Html.DisplayNameFor(m => firstItem.StockDisponivel)</th>
              <th class="text-end" style="width:180px;">Ações</th>
            </tr>
          </thead>
          <tbody>
          @foreach (var item in Model)
          {
            <tr>
              <td>@item.Nome</td>
              <td>@item.Descricao</td>
              <td>@item.StockDisponivel</td>
              <td class="text-end text-nowrap">
                <a class="btn btn-sm btn-outline-primary"   asp-action="Edit"    asp-route-id="@item.Id">Editar</a>
                <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-route-id="@item.Id">Detalhes</a>
                <a class="btn btn-sm btn-outline-danger"    asp-action="Delete"  asp-route-id="@item.Id">Apagar</a>
              </td>
            </tr>
          }
          </tbody>
        </table>
      </div>
    }
  </div>
</div>